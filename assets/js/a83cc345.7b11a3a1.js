"use strict";(self.webpackChunkalgodema=self.webpackChunkalgodema||[]).push([[8233],{6203:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>h});var n=i(4848),s=i(8453);const r={slug:"software-architecture-the-4-plus-1-model",title:"Software Architecture: The 4+1 view model",date:"2021-09-18 12:49:31 +0100",authors:["reda"],tags:["software","architecture","system design"]},a="What is Software Architecture?",o={permalink:"/blog/software-architecture-the-4-plus-1-model",source:"@site/blog/2021-09-18-software-architecture-the-4-plus-1-model.mdx",title:"Software Architecture: The 4+1 view model",description:"author",date:"2021-09-18T12:49:31.000Z",tags:[{inline:!0,label:"software",permalink:"/blog/tags/software"},{inline:!0,label:"architecture",permalink:"/blog/tags/architecture"},{inline:!0,label:"system design",permalink:"/blog/tags/system-design"}],readingTime:3.615,hasTruncateMarker:!1,authors:[{name:"Reda Jaifar",title:"Lead Developer",url:"https://github.com/reda-jaifar",imageURL:"https://avatars.githubusercontent.com/u/10919693?s=400&u=b30e8e86baebe277b11a4117560d601fd34bd245&v=4",key:"reda",page:null}],frontMatter:{slug:"software-architecture-the-4-plus-1-model",title:"Software Architecture: The 4+1 view model",date:"2021-09-18 12:49:31 +0100",authors:["reda"],tags:["software","architecture","system design"]},unlisted:!1,prevItem:{title:"Software Architecture: The Logical View",permalink:"/blog/software-architecture-logical-view"},nextItem:{title:"DevOps: Strengthen your digital transformation",permalink:"/blog/devops-strengthen-your-digital-transformation"}},c={authorsImageUrls:[void 0]},h=[{value:"Logical View",id:"logical-view",level:2},{value:"Implementation View",id:"implementation-view",level:2},{value:"Process View",id:"process-view",level:2},{value:"Deployment View",id:"deployment-view",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",em:"em",h1:"h1",h2:"h2",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"author",src:i(4120).A+"",width:"940",height:"465"}),"\n",(0,n.jsx)(t.a,{href:"https://holition.com/play/ycn-s-lego-serious-play-workshop",children:"photo source"})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"The software architecture of a computing system is the set of structures needed to reason about the system, which\ncomprise software elements, relations among them, and properties of both."}),"\n",(0,n.jsx)("u",{children:"by SEI"})]}),"\n",(0,n.jsx)(t.p,{children:"We can decrypt the above definition as structuring a system as a whole recessed block into parts connected, complementary and modular.\nThe more these parts are decoupled and can work independently, and communicate to each other effectively the more our architecture\nwill fill its mission to ensure a maintainable, extensible and homogeneous system."}),"\n",(0,n.jsx)(t.h1,{id:"the-41-view-model-of-software-architecture",children:"The 4+1 view model of software architecture"}),"\n",(0,n.jsxs)(t.p,{children:["Like a building, there are different plans and maps that can describe different the different perspectives of that building,\nwe have the electrical, plumbing, structural and others. This is exactly how the 4+1 view model defines software architecture\nin the paper published by ",(0,n.jsx)(t.a,{href:"https://www.cs.ubc.ca/~gregor/teaching/papers/4+1view-architecture.pdf",children:"Phillip Krutchen"})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"The 1+4 Model View",src:i(8861).A+"",width:"1280",height:"634"}),"\n",(0,n.jsx)(t.em,{children:"The 4+1 view model describes an application\u2019s architecture using four views, along with scenarios that show how the elements within each view collaborate to handle requests"})]}),"\n",(0,n.jsx)(t.p,{children:"Each of the four views has a well-defined purpose as detailed below:"}),"\n",(0,n.jsx)(t.h2,{id:"logical-view",children:"Logical View"}),"\n",(0,n.jsx)(t.p,{children:"It consists of the source code written by developers, in the context of an oriented programming language like Java, the elements are\nclasses and packages, in addition to relationships between them such as inheritance, association, and composition..."}),"\n",(0,n.jsx)(t.h2,{id:"implementation-view",children:"Implementation View"}),"\n",(0,n.jsx)(t.p,{children:"Includes the result of the build process that can be run or deployed such as a Java JAR or Node.js Package. These interact with each\nother in the form or a composition or dependency relationship."}),"\n",(0,n.jsx)(t.h2,{id:"process-view",children:"Process View"}),"\n",(0,n.jsx)(t.p,{children:"Refer to the process holding and running either in virtual machines or containers like docker, relations between them is called\ninter-process communication."}),"\n",(0,n.jsx)(t.h2,{id:"deployment-view",children:"Deployment View"}),"\n",(0,n.jsx)(t.p,{children:"Represents the map of the physical or virtual machines where the system is executed and running, also describes the communication\nat level through the network. For example this view can be a VPC with all the routing configuration inside this network and between it and the internet."}),"\n",(0,n.jsx)(t.h1,{id:"why-an-application-architecture-is-relevant",children:"Why an application architecture is relevant?"}),"\n",(0,n.jsxs)(t.p,{children:["An application come to life with the purpose of solving a problem, to do so it needs to fulfill two types of requirements, Functional requirements\nthat defines what the application should do, Previously defined in the form of specifications, with the ",(0,n.jsx)(t.strong,{children:"agile"})," edge we define them as ",(0,n.jsx)(t.strong,{children:"user stories"}),",\n",(0,n.jsx)(t.strong,{children:"use cases"}),", or events. we can start coding immediately and produce an application that respond to these requirements without thinking about architecture.\nBut when it come to develop a reliable, maintainable and extensible system, Architecture is our core activity because it helps us\nanswer questions regarding how the system behaves with millions of users at the same time, ",(0,n.jsx)(t.strong,{children:"security threats"})," and ",(0,n.jsx)(t.strong,{children:"delivery time"}),".\n",(0,n.jsxs)("span",{style:{color:"purple"},children:[(0,n.jsx)(t.strong,{children:"Architecture meets quality requirements"}),"."]})]}),"\n",(0,n.jsx)(t.h1,{id:"architecture-styles",children:"Architecture Styles"}),"\n",(0,n.jsxs)(t.p,{children:["I found the definition given by David Garlan and Mary Shaw in their publication titled ",(0,n.jsx)(t.a,{href:"https://www.cs.cmu.edu/afs/cs/project/able/ftp/intro_softarch/intro_softarch.pdf",children:"An Introduction to Software Architecture"}),"\nan amazing reference to understand the concept of architecture styles and how it can be view in the field of computing systems."]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"An architectural style, then, defines a family of such systems in terms of a\npattern of structural organization. More specifically, an architectural style\ndetermines the vocabulary of components and connectors that can be used in\ninstances of that style, together with a set of constraints on how they can be\ncombined. These can include topological constraints on architectural\ndescriptions (e.g., no cycles). Other constraints\u2014say, having to do with\nexecution semantics\u2014might also be part of the style definition."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Follow are the questions shared by these two pioneers in the discipline of software architecture, answering these questions\nwill remarkably help define the architecture that fit for the system we're building:"}),"\n",(0,n.jsxs)(t.p,{children:["Given this framework, we can understand what a style is by answering the\nfollowing questions: ",(0,n.jsx)(t.strong,{children:"What is the structural pattern"}),",",(0,n.jsx)(t.strong,{children:"the components"}),",\n",(0,n.jsx)(t.strong,{children:"connectors"}),", and ",(0,n.jsx)(t.strong,{children:"constraints"}),"? What is the underlying computational model?\nWhat are the essential invariants of the style? What are some common\nexamples of its use? What are the advantages and disadvantages of using that\nstyle? What are some common specializations?"]}),"\n",(0,n.jsxs)(t.p,{children:["in the next part, let's explore some of the most known architecture styles\n",(0,n.jsx)(t.a,{href:"/blog/software-architecture-logical-view",children:"Logical View"})]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Software_architecture",children:"Software Architecture Definition by Wikipedia"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://www.cs.ubc.ca/~gregor/teaching/papers/4+1view-architecture.pdf",children:"The \u201c4+1\u201d View Model of Software Architecture by Philippe Kruchten"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://www.sei.cmu.edu/our-work/software-architecture/",children:"Advancing the Practice of Software Architecture by Software Engineering Institute"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8861:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/1plus4model-98cd387be0cde404b227e6e2c71c1319.png"},4120:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/software-architecture-play-with-bricks-260f1f420d7ba8a7002ae864105f87f0.jpeg"},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var n=i(6540);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);